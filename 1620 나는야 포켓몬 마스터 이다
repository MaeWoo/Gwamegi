#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>
#include <stdlib.h>

typedef struct Point {
	char pkm[21];
	int idx;
}point;
// 문자열로 정렬
int compare(const void* a, const void* b) {
	point num1 = *(point*)a;
	point num2 = *(point*)b;

	if (strcmp(num1.pkm, num2.pkm) < 0) {
		return -1;
	}
	else if (strcmp(num1.pkm, num2.pkm) > 0) {
		return 1;
	}
	return 0;
}
// 인덱스로 정렬
int compare2(const void* a, const void* b) {
	point num1 = *(point*)a;
	point num2 = *(point*)b;

	if (num1.idx < num2.idx) {
		return -1;
	}
	else if (num1.idx > num2.idx) {
		return 1;
	}
	return 0;
}

int main() {
	int n, m;
	char awr[21];
	point arr[100001] = { 0 };
	point arr2[100001] = { 0 };
	scanf("%d %d", &n, &m);
	for (int i = 0; i < n; i++) {
		scanf("%s", arr[i].pkm);
		strcpy(arr2[i].pkm, arr[i].pkm);
		arr[i].idx = i;
		arr2[i].idx = i;
	}
	// 퀵정렬
	qsort(arr, n, sizeof(point), compare);
	qsort(arr2, n, sizeof(point), compare2);
	/*
	for (int i = 0; i < n; i++) {
		printf("%s %d\n", arr[i].pkm,arr[i].idx);
	}
	*/
	for (int j = 0; j < m; j++) {
		int low = 0;
		int high = n - 1;
		int mid;
		scanf("%s", awr);
		// 숫자 입력일 경우
		if (awr[0] >= 48 && awr[0] <= 57) {
			int count = atoi(awr);
			low = 1;
			high = n;
			// 이진 탐색
			while (low <= high) {
				mid = (low + high) / 2;
				if (mid == count) {
					printf("%s\n", arr2[mid - 1].pkm);
					break;
				}
				else if (mid < count) {
					low = mid + 1;
				}
				else if (mid > count) {
					high = mid - 1;
				}
			}
		}
		// 문자열 입력일 경우
		else if ((awr[0] >= 65 && awr[0] <= 90) ||
			awr[0] >= 97 && awr[0] <= 122) {
			// 이진 탐색
			while (low <= high) {
				mid = (low + high) / 2;
				if (strcmp(arr[mid].pkm, awr) == 0) {
					printf("%d\n", arr[mid].idx + 1);
					break;
				}
				else if (strcmp(arr[mid].pkm, awr) < 0) {
					low = mid + 1;
				}
				else if (strcmp(arr[mid].pkm, awr) > 0) {
					high = mid - 1;
				}
			}
		}
	}
}
 
