#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct list {
	char name[21];
}list;

int compare(const void* a, const void* b) {
	list num1 = *(list*)a;
	list num2 = *(list*)b;

	if (strcmp(num1.name, num2.name) < 0) {
		return -1;
	}
	else if (strcmp(num1.name, num2.name) > 0) {
		return 1;
	}
	else {
		return 0;
	}
}
int binary_search(char key[21], list* arr, int low, int high) {
	int mid;
	while (low <= high) {
		mid = (low + high) / 2;
		if (strcmp(key, arr[mid].name) == 0) {
			return 1;
		}
		else if (strcmp(key, arr[mid].name) < 0) {
			high = mid - 1;
		}
		else if (strcmp(key, arr[mid].name) > 0) {
			low = mid + 1;
		}
	}
	return 0;
}
int main() {
	int n, m,check, count = 0;
	char temp[21] = { 0 };
	list arr[500001] = { 0 };
	list awr[500001] = { 0 };
	scanf("%d %d", &n, &m);
	for (int i = 0; i < n; i++) {
		scanf("%s", arr[i].name);
	}
	
	qsort(arr, n, sizeof(list), compare);

	for (int i = 0; i < m; i++) {
		scanf("%s", temp);
		check = binary_search(temp,arr, 0, n-1);
		if (check == 1) {
			strcpy(awr[count].name, temp);
			count++;
		}
	}
	qsort(awr, count, sizeof(list), compare);
	printf("%d\n", count);
	for (int i = 0; i < count; i++) {
		printf("%s\n", awr[i].name);
	}
}
 
